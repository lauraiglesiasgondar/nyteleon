{"remainingRequest":"C:\\Users\\ilaur\\Desktop\\nyteleon\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ilaur\\Desktop\\nyteleon\\Frontend\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"C:\\Users\\ilaur\\Desktop\\nyteleon\\Frontend\\src\\views\\Home.vue","mtime":1607383373982},{"path":"C:\\Users\\ilaur\\Desktop\\nyteleon\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ilaur\\Desktop\\nyteleon\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\ilaur\\Desktop\\nyteleon\\Frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\ilaur\\Desktop\\nyteleon\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ilaur\\Desktop\\nyteleon\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}